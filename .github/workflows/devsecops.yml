name: DevSecOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  secret-scan:
    runs-on: ubuntu-latest
    outputs:
      secret_summary: ${{ steps.save_summary.outputs.summary }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install TruffleHog
        run: pip install trufflehog

      - name: Run TruffleHog
        run: trufflehog git file://. --json > trufflehog_report.json || true

      - name: Upload TruffleHog report
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-report
          path: trufflehog_report.json

      - name: Save Secret Scan summary
        id: save_summary
        run: |
          COUNT=$(jq 'length' trufflehog_report.json 2>/dev/null || echo 0)
          if [ "$COUNT" -eq 0 ]; then
            echo "summary=‚úÖ Secret Scan: Clean" >> $GITHUB_OUTPUT
          else
            echo "summary=‚ùå Secret Scan: $COUNT findings" >> $GITHUB_OUTPUT
          fi

  snyk-scan:
    runs-on: ubuntu-latest
    needs: secret-scan
    outputs:
      sca_summary: ${{ steps.save_summary.outputs.summary }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 23

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Snyk test
        run: snyk test --file=requirements.txt --json > snyk_report.json || true

      - name: Upload Snyk report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk_report.json

      - name: Save SCA summary
        id: save_summary
        run: |
          COUNT=$(jq '.vulnerabilities | length' snyk_report.json 2>/dev/null || echo 0)
          if [ "$COUNT" -eq 0 ]; then
            echo "summary=‚úÖ SCA: Clean" >> $GITHUB_OUTPUT
          else
            echo "summary=‚ùå SCA: $COUNT vulnerabilities" >> $GITHUB_OUTPUT
          fi

  sast-scan:
    runs-on: ubuntu-latest
    needs: [secret-scan, snyk-scan]
    outputs:
      sast_summary: ${{ steps.save_summary.outputs.summary }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: bandit -r . -f json -o bandit_report.json || true

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.json

      - name: Save SAST summary
        id: save_summary
        run: |
          COUNT=$(jq '.results | length' bandit_report.json 2>/dev/null || echo 0)
          if [ "$COUNT" -eq 0 ]; then
            echo "summary=‚úÖ SAST: Clean" >> $GITHUB_OUTPUT
          else
            echo "summary=‚ùå SAST: $COUNT issues" >> $GITHUB_OUTPUT
          fi

  dast-scan:
    runs-on: ubuntu-latest
    needs: [secret-scan, snyk-scan, sast-scan]
    outputs:
      dast_summary: ${{ steps.save_summary.outputs.summary }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Docker
        run: |
          docker --version
          docker compose version

      - name: Ensure zap-reports folder
        run: |
          mkdir -p zap-reports
          chmod 777 zap-reports

      - name: Run ZAP scan via Docker Compose
        run: |
          docker compose -f docker-compose.ci.yml up --abort-on-container-exit || true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: zap-reports/zap_baseline_report.html

      - name: Save DAST summary
        id: save_summary
        run: |
          if [ -f zap-reports/zap_baseline_report.html ]; then
            WARN=$(grep -o 'WARN' zap-reports/zap_baseline_report.html | wc -l)
            FAIL=$(grep -o 'FAIL' zap-reports/zap_baseline_report.html | wc -l)
          else
            WARN=0
            FAIL=0
          fi
          if [ "$WARN" -eq 0 ] && [ "$FAIL" -eq 0 ]; then
            echo "summary=‚úÖ DAST: Clean" >> $GITHUB_OUTPUT
          else
            echo "summary=‚ùå DAST: $WARN warnings, $FAIL fails" >> $GITHUB_OUTPUT
          fi

  notify:
    runs-on: ubuntu-latest
    needs: [secret-scan, snyk-scan, sast-scan, dast-scan]
    steps:
      - name: Notify Discord
        if: always()
        run: |
          SECRET="${{ needs.secret-scan.outputs.secret_summary }}"
          SCA="${{ needs.snyk-scan.outputs.sca_summary }}"
          SAST="${{ needs.sast-scan.outputs.sast_summary }}"
          DAST="${{ needs.dast-scan.outputs.dast_summary }}"

          # fallback
          [ -z "$SECRET" ] && SECRET="‚úÖ Secret Scan: Clean"
          [ -z "$SCA" ] && SCA="‚úÖ SCA: Clean"
          [ -z "$SAST" ] && SAST="‚úÖ SAST: Clean"
          [ -z "$DAST" ] && DAST="‚úÖ DAST: Clean"

          # get timestamp
          TIME=$(TZ=Asia/Jakarta date "+%Y-%m-%d %H:%M WIB")
          STATUS="completed"

          CONTENT="üö® DevSecOps Pipeline Report üö®\n\n$SECRET\n$SCA\n$SAST\n$DAST\n\nüîó Repo: vuln-bank\nüïê Time: $TIME\nüëâ https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo "$CONTENT" > summary.txt

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"$CONTENT\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Upload summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: devsecops-summary
          path: summary.txt

      # ‚ö†Ô∏è uncomment kalau mau upload full ZAP report
      # - name: Upload Full ZAP Report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: zap-full-report
      #     path: zap-reports/zap_full_report.html
